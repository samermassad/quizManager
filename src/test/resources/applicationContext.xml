<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- <context:property-placeholder location="classpath:/database.properties" 
		/> <context:component-scan base-package="com.foo" /> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<!---->
		<property name="driverClassName"
			value="org.apache.derby.jdbc.ClientDriver" />
		<property name="url"
			value="jdbc:derby://localhost:1527/QuizManager;create=true" />
		<!---->

		<!-- <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" 
			/> <property name="url" value="jdbc:derby:memory:testDS;create=true" /> -->


		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		id="hibernateProperties">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties"
			ref="hibernateProperties" />
		<property name="packagesToScan">
			<list>
				<value>fr.epita.quiz.datamodel</value>
			</list>
		</property>
	</bean>


	<bean id="questionDAO" class="fr.epita.quiz.services.QuestionDAO"></bean>
	<bean id="mcqChoiceDAO"
		class="fr.epita.quiz.services.MCQChoiceDAO"></bean>
	<bean id="examDAO" class="fr.epita.quiz.services.ExamDAO"></bean>
	<bean id="userDAO" class="fr.epita.quiz.services.UserDAO"></bean>
	<bean id="relDAO"
		class="fr.epita.quiz.services.ExamQuestionRelDAO"></bean>
	<bean id="authService"
		class="fr.epita.quiz.services.AuthenticationService"></bean>

	<bean id="questionQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from Question as question where
				(:id is null or question.id = :id)
			and
				(:type is null or question.type = :type)
			and
				(:question is null or question.question = :question)
		]]></value>
		</constructor-arg>
	</bean>
	
	<bean id="mcqQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from MCQChoice as mcqChoice where
				(:id is null or mcqChoice.id = :id)
			and
				(:choice is null or mcqChoice.choice = :choice)
			and
				(:valid is null or mcqChoice.valid = :valid)
			and
				(:order is null or mcqChoice.order = :order)
			and
				(:question is null or mcqChoice.question = :question)
		]]></value>
		</constructor-arg>
	</bean>

	<bean id="examQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from Exam as exam where
				(:id is null or exam.id = :id)
			and
				(:name is null or exam.name = :name)
		]]></value>
		</constructor-arg>
	</bean>
	
	<bean id="examQuestionRelQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from ExamQuestionRel as examQuestionRel where
				(:id is null or examQuestionRel.id = :id)
			and
				(:question is null or examQuestionRel.question = :question)
			and
				(:exam is null or examQuestionRel.exam = :exam)
		]]></value>
		</constructor-arg>
	</bean>

	<bean id="userQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from UserLogin as user where
				(:id is null or user.id = :id)
			and
				user.userName = :userName
			and
				user.hashedPassword = :hashedPassword
		]]></value>
		</constructor-arg>
	</bean>


	<bean id="questionOperationService"
		class="fr.epita.quiz.services.QuestionOperationService"></bean>

	<bean id="examOperationService"
		class="fr.epita.quiz.services.ExamOperationService"></bean>


</beans>